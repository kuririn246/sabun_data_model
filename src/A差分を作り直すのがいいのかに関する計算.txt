
B差分のうち変化のない部分が十分に大きくなったらA差分に移す、というのが基本方針であるが、
変化のない部分をどう検出するかが問題である。
実際のところ、２つのファイルを実際に比較してみる以外の方法はあるまいと思う。
少し時間がかかるが、まあ必要経費と思おう。

節約可能な容量*リベースからの差分生成回数＜ベースのサイズ
を満たすとき、リベースすることで容量の節約が可能になると予想できる。が、これが長い目で見たデータ量を最小にする戦略とは思えない。
ベースを作るコストから少ししか節約できていないため、ほとんど得がないはずである。

たとえば10回B差分を生成して、10のうち5が共通部分でリベースにより節約できるとしよう
ベースのA差分のサイズは50である。今リベースをするときの期待される節約は、
リベース語に全く同じ増加率でデータが増加し続け、さらにA差分のサイズはいつリベースしても変わらないとするとき、
今リベースしたときと、次でリベースしたときで比較する。

10ターンでリベースするとすると、(A差分50 + 新B差分5 * 10 + A差分50) / 12 =  11.4285...
11ターンでリベースだと、 (旧B差分10 + A差分50 + 新C差分5 * 11 + A差分50) / 14 =  10.9375
次でリベースしたほうが平均サイズが小さいので次でやろう、という判断ができる。
これを続けていくと、35ターンで正負が逆転する。

数式で逆転条件をみていく
2A + Bn / (n + 2)
B' + 2A + B(n+1) / (n + 4)

4A - 2(B' + B) < n(B' - B)

つまりB が A なみに大きければ、左辺が負になるのでリベース、
左辺はほぼ定数であるが、B'が増えるほど条件はゆるくなる
右辺は B' - B は正になるはずなので n が増えれば単調増加するので
そのうち逆転することが証明された

ただ、ここでいうB'は現在B差分を作ったときの大きさであり、
Bは共通部分を単に削っただけの予想サイズである。
これから何が変化するかなど全然考えていない、いい加減な予想とは言える。
